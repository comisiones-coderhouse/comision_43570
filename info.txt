git init : inicializa un repo nuevo (.git) donde tire el comando

npm  { install | i } :

npm i 




HOOK :  son funciones que nos sirven para meter una nueva funcionalidad en un componentes



function useSate(init){

    const resultado = []

    return resultado 

}


COMPONENTES : Son funciones en mayuscula con retorno usualmente en jsx que pueden reaccionar a cambios y recargar su cuerpo (ciclo de vida)


MONTADO

ACTUALIZACION

DESMONTADO



function PokemonContainer (){

    useEffect()


    return (
        <></>
    )
}




import {useParams} from "react-router-dom"


const res = useParams() //






Pasar datos de un Componente Hijo(ch) a un Componente Padre(cp) / State Uplifting : 


1- hay que hacer una funcion en el cp
2- hay que enviarsela al ch (por props)
3- el ch decide el momento en que quiere ejecutar la funcion que reciba (callback)
4- cuando la ejecute, le puede pasar lo que quiera 
5- el cp recibe el dato y lo usa como quiera




PATRON CONTAINER 
PATRON PROVIDER 

IMPLEMENTACION DE CONTEXT API

1- crear el contexto
2- sacarle el provider
3- hacer un componente propio
4- usar el provider en mi componente customizado
5- uso mi componente customizado en el lugar que yo quiera, a partir de ahi la info del contexto se comparte hacia abajo



CONSUMIR EL VALOR DEL CONTEXTO 

1- traer el hook useContext
2- traer el objeto contexto (el que obtuve de la createContext)
3- ejecutar el hook pasandole como parametro el objeto contexto
4- profit ???